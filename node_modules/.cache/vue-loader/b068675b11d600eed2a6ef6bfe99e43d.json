{"remainingRequest":"/Users/11356979/upload-death-certificate-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/11356979/upload-death-certificate-project/src/components/UploadImagePage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/11356979/upload-death-certificate-project/src/components/UploadImagePage.vue","mtime":1607362517125},{"path":"/Users/11356979/upload-death-certificate-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/11356979/upload-death-certificate-project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/11356979/upload-death-certificate-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/11356979/upload-death-certificate-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgpleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhOmZ1bmN0aW9uKCl7CiAgICAgIHJldHVybiB7dGhhaURhdGUgOiBbJ+C5kScsICfguZInLCAn4LmTJywgJ+C5lCcsICfguZUnLCAn4LmWJywgJ+C5lycsICfguZgnLCAn4LmZJywgJ+C5keC5kCcsIAogICAgICAgICAgICAgICAgICAn4LmR4LmRJywgJ+C5keC5kicsICfguZHguZMnLCAn4LmR4LmUJywgJ+C5keC5lScsICfguZHguZYnLCAn4LmR4LmXJywgJ+C5keC5mCcsICfguZHguZknLCAn4LmS4LmQJywgCiAgICAgICAgICAgICAgICAgICfguZLguZEnLCAn4LmS4LmSJywgJ+C5kuC5kycsICfguZLguZQnLCAn4LmS4LmVJywgJ+C5kuC5licsICfguZLguZcnLCAn4LmS4LmYJywgJ+C5kuC5mScsICfguZPguZAnLCAn4LmT4LmRJ10sCiAgICAgICAgICAgICAgdGhhaU51bWJlciA6IFsn4LmQJywgJ+C5kScsICfguZInLCAn4LmTJywgJ+C5lCcsICfguZUnLCAn4LmWJywgJ+C5lycsICfguZgnLCAn4LmZJ10sCiAgICAgICAgICAgICAgY3VycmVudEltYWdlIDogbmV3IEltYWdlKCksCiAgICAgICAgICAgICAgaW1nUGF0aEZyb21DYW52YXMgOiAiIiwKICAgICAgICAgICAgICBiaXJ0aERhdGU6IG5ldyBEYXRlKCksCiAgICAgICAgICAgICAgaXNTZWxlY3RlZERhdGUgOiBmYWxzZSwKICAgICAgICAgICAgICBpc1NlbGVjdGVkSW1hZ2UgOiBmYWxzZQogICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHVwZGF0ZUNhbnZhc0ltYWdlKGUpIHsKICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICAgICAgICB2YXIgcmVhZGVyLCBmaWxlcyA9IGUudGFyZ2V0LmZpbGVzOwogICAgICAgICAgICByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogCiAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgICAgICAgICAgdmFyIGltZyA9IG5ldyBJbWFnZSgpOwogICAgICAgICAgICAgICAgaW1nLm9ubG9hZCA9IGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgIHNlbGYuZHJhd0NhbnZhc0ltYWdlKGltZyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpbWcuc3JjID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50SW1hZ2UgPSBpbWc7CiAgICAgICAgICAgICAgICB0aGlzLmlzU2VsZWN0ZWRJbWFnZSA9IHRydWU7CiAgICAgICAgICAgIH07CiAKICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZXNbMF0pOwogCiAgICAgICAgfSwKCiAgICAgICAgZ29Ub1Jlc3VsdEltYWdlUGFnZSgpewogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goe25hbWUgOiAncmVzdWx0JywgcGFyYW1zOiB7aW1hZ2VQYXRoIDogdGhpcy5pbWdQYXRoRnJvbUNhbnZhc319KTsKICAgICAgICB9LAogCiAgICAgICAgZHJhd0NhbnZhc0ltYWdlKGltZykgewogICAgICAgICAgICB2YXIgY2FudmFzID0gdGhpcy4kcmVmcy5pbWFnZUNhbnZhczsKICAgICAgICAgICAgaWYod2luZG93LmlubmVyV2lkdGggPCA3NjgpewogICAgICAgICAgICAgIGNhbnZhcy53aWR0aCA9IHdpbmRvdy53aWR0aDsKICAgICAgICAgICAgICBjYW52YXMuaGVpZ2h0ID0gd2luZG93LmhlaWdodDsKICAgICAgICAgICAgfSBlbHNlewogICAgICAgICAgICAgIGNhbnZhcy53aWR0aCA9IDU1MDsKICAgICAgICAgICAgICBjYW52YXMuaGVpZ2h0ID0gNzUwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgICB2YXIgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7CiAgICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSAnd2hpdGUnOwogICAgICAgICAgICBjdHguZmlsbFJlY3QoMCwwLGNhbnZhcy53aWR0aCxjYW52YXMuaGVpZ2h0KTsKCiAgICAgICAgICAgIGN0eC5mb250ID0gIjJyZW0gVGhhc2FkaXRoIjsKICAgICAgICAgICAgY3R4LnRleHRBbGlnbiA9ICJjZW50ZXIiOwogICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gJ2JsYWNrJzsKICAgICAgICAgICAgaWYod2luZG93LmlubmVyV2lkdGggPCA3NjgpewogICAgICAgICAgICAgIGN0eC5maWxsVGV4dCh0aGlzLmdldEJpcnRoRGF0ZVN0cmluZyh0aGlzLmJpcnRoRGF0ZSksIGNhbnZhcy53aWR0aCowLjIsIGNhbnZhcy5oZWlnaHQvMS42NSk7CiAgICAgICAgICAgICAgY3R4LmZpbGxUZXh0KHRoaXMuZ2V0RGVhdGhEYXRlU3RyaW5nKCksIGNhbnZhcy53aWR0aCowLjIsIGNhbnZhcy5oZWlnaHQvMS41KTsKICAgICAgICAgICAgCiAgICAgICAgICAgICAgY3R4LmRyYXdJbWFnZShpbWcsIGNhbnZhcy53aWR0aC8yLCBjYW52YXMuaGVpZ2h0LzIsIGNhbnZhcy53aWR0aCwgY2FudmFzLndpZHRoLzIpOwogICAgICAgICAgICB9IGVsc2V7CiAgICAgICAgICAgICAgY3R4LmZpbGxUZXh0KHRoaXMuZ2V0QmlydGhEYXRlU3RyaW5nKHRoaXMuYmlydGhEYXRlKSwgY2FudmFzLndpZHRoLzIsIGNhbnZhcy5oZWlnaHQvMS42KTsKICAgICAgICAgICAgICBjdHguZmlsbFRleHQodGhpcy5nZXREZWF0aERhdGVTdHJpbmcoKSwgY2FudmFzLndpZHRoLzIsIGNhbnZhcy5oZWlnaHQvMS40KTsKICAgICAgICAgICAgCiAgICAgICAgICAgICAgY3R4LmRyYXdJbWFnZShpbWcsIGNhbnZhcy53aWR0aCowLjE1LCBjYW52YXMuaGVpZ2h0KjAuMDUsIGNhbnZhcy53aWR0aCowLjcsIGNhbnZhcy53aWR0aCowLjcpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgdmFyIGltYWdlUGF0aCA9IGNhbnZhcy50b0RhdGFVUkwoImltYWdlL2pwZWciLCAxLjApOwogICAgICAgICAgICB0aGlzLmltZ1BhdGhGcm9tQ2FudmFzID0gaW1hZ2VQYXRoOwogICAgICAgIH0sCgogICAgICAgIG9uU2VsZWN0RGF0ZShldmVudCl7CiAgICAgICAgICB0aGlzLmJpcnRoRGF0ZSA9IGV2ZW50LnRhcmdldC52YWx1ZUFzRGF0ZTsKICAgICAgICAgIHRoaXMuaXNTZWxlY3RlZERhdGUgPSB0cnVlOwogICAgICAgICAgaWYodGhpcy5pc1NlbGVjdGVkSW1hZ2UpewogICAgICAgICAgICAgIHRoaXMuZHJhd0NhbnZhc0ltYWdlKHRoaXMuY3VycmVudEltYWdlKTsKICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICBnZXRCaXJ0aERhdGVTdHJpbmcoZGF0ZXRpbWUpewogICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHt5ZWFyOiAnbnVtZXJpYycsIG1vbnRoOiAnbG9uZycsIGRheTogJ251bWVyaWMnIH07CiAgICAgICAgICBkYXRldGltZSA9IG5ldyBEYXRlKGRhdGV0aW1lKS50b0xvY2FsZURhdGVTdHJpbmcoJ3RoLVRIJywgb3B0aW9ucyk7CiAgICAgICAgICB2YXIgZGF0ZUFyciA9IGRhdGV0aW1lLnNwbGl0KCIgIik7CiAgICAgICAgICB2YXIgZGF0ZSA9IHRoaXMudGhhaURhdGVbZGF0ZUFyclswXS0xXTsKICAgICAgICAgIHZhciBtb250aCA9IGRhdGVBcnJbMV07CiAgICAgICAgICB2YXIgeWVhciA9IHRoaXMuZ2V0VGhhaVllYXIoZGF0ZUFyclsyXSk7CiAgICAgICAgICByZXR1cm4gYOC4iuC4suC4leC4sCAke2RhdGV9ICR7bW9udGh9IOC4ni7guKguICR7eWVhcn1gOwogICAgICAgIH0sCgogICAgICAgIGdldERlYXRoRGF0ZVN0cmluZygpewogICAgICAgICAgcmV0dXJuIGDguKHguKPguJPguLAg4LmR4LmZIOC4mOC4seC4meC4p+C4suC4hOC4oSDguJ4u4LioLiDguZLguZXguZbguZNgOwogICAgICAgIH0sCiAgICAgICAgCiAgICAgICAgZ2V0VGhhaVllYXIoeWVhcil7CiAgICAgICAgICB2YXIgeWVhckFyciA9IHllYXIuc3BsaXQoJycpOwogICAgICAgICAgeWVhckFyci5mb3JFYWNoKChlbGVtZW50LCBpbmRleCkgPT4gewogICAgICAgICAgICB5ZWFyQXJyW2luZGV4XSA9IHRoaXMudGhhaU51bWJlcltlbGVtZW50XTsKICAgICAgICAgIH0pOwogICAgICAgICAgcmV0dXJuIHllYXJBcnIuam9pbignJyk7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["UploadImagePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UploadImagePage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"row mb-3\">\n          <input type=\"file\" id=\"imageLoader\" class=\"my-2\" :disabled=\"!isSelectedDate\" @change=\"updateCanvasImage\"/>\n          <input type=\"date\" id=\"dateSelector\" class=\"my-2\" @input=\"onSelectDate($event)\" />\n          <div style=\"background-color:black; width:97%; heigth:50%;\" class=\"bg-canvas\">\n            <canvas id=\"imageCanvas\" ref=\"imageCanvas\" style=\"background-color:white;\" ></canvas>\n            <div><button type=\"button\" class=\"btn btn-light btn-lg\" @click=\"goToResultImagePage\">Next</button></div>\n        </div>\n        </div>\n    </div>\n</template> \n\n<script>\n\nexport default {\n    data:function(){\n      return {thaiDate : ['๑', '๒', '๓', '๔', '๕', '๖', '๗', '๘', '๙', '๑๐', \n                  '๑๑', '๑๒', '๑๓', '๑๔', '๑๕', '๑๖', '๑๗', '๑๘', '๑๙', '๒๐', \n                  '๒๑', '๒๒', '๒๓', '๒๔', '๒๕', '๒๖', '๒๗', '๒๘', '๒๙', '๓๐', '๓๑'],\n              thaiNumber : ['๐', '๑', '๒', '๓', '๔', '๕', '๖', '๗', '๘', '๙'],\n              currentImage : new Image(),\n              imgPathFromCanvas : \"\",\n              birthDate: new Date(),\n              isSelectedDate : false,\n              isSelectedImage : false\n      }\n    },\n    methods: {\n        updateCanvasImage(e) {\n            var self = this;\n            var reader, files = e.target.files;\n            reader = new FileReader();\n \n            reader.onload = (e) => {\n                var img = new Image();\n                img.onload = function() {\n                    self.drawCanvasImage(img);\n                }\n                img.src = e.target.result;\n                this.currentImage = img;\n                this.isSelectedImage = true;\n            };\n \n            reader.readAsDataURL(files[0]);\n \n        },\n\n        goToResultImagePage(){\n          this.$router.push({name : 'result', params: {imagePath : this.imgPathFromCanvas}});\n        },\n \n        drawCanvasImage(img) {\n            var canvas = this.$refs.imageCanvas;\n            if(window.innerWidth < 768){\n              canvas.width = window.width;\n              canvas.height = window.height;\n            } else{\n              canvas.width = 550;\n              canvas.height = 750;\n            }\n            \n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0,0,canvas.width,canvas.height);\n\n            ctx.font = \"2rem Thasadith\";\n            ctx.textAlign = \"center\";\n            ctx.fillStyle = 'black';\n            if(window.innerWidth < 768){\n              ctx.fillText(this.getBirthDateString(this.birthDate), canvas.width*0.2, canvas.height/1.65);\n              ctx.fillText(this.getDeathDateString(), canvas.width*0.2, canvas.height/1.5);\n            \n              ctx.drawImage(img, canvas.width/2, canvas.height/2, canvas.width, canvas.width/2);\n            } else{\n              ctx.fillText(this.getBirthDateString(this.birthDate), canvas.width/2, canvas.height/1.6);\n              ctx.fillText(this.getDeathDateString(), canvas.width/2, canvas.height/1.4);\n            \n              ctx.drawImage(img, canvas.width*0.15, canvas.height*0.05, canvas.width*0.7, canvas.width*0.7);\n            }\n            \n            \n            var imagePath = canvas.toDataURL(\"image/jpeg\", 1.0);\n            this.imgPathFromCanvas = imagePath;\n        },\n\n        onSelectDate(event){\n          this.birthDate = event.target.valueAsDate;\n          this.isSelectedDate = true;\n          if(this.isSelectedImage){\n              this.drawCanvasImage(this.currentImage);\n          }\n        },\n\n        getBirthDateString(datetime){\n          const options = {year: 'numeric', month: 'long', day: 'numeric' };\n          datetime = new Date(datetime).toLocaleDateString('th-TH', options);\n          var dateArr = datetime.split(\" \");\n          var date = this.thaiDate[dateArr[0]-1];\n          var month = dateArr[1];\n          var year = this.getThaiYear(dateArr[2]);\n          return `ชาตะ ${date} ${month} พ.ศ. ${year}`;\n        },\n\n        getDeathDateString(){\n          return `มรณะ ๑๙ ธันวาคม พ.ศ. ๒๕๖๓`;\n        },\n        \n        getThaiYear(year){\n          var yearArr = year.split('');\n          yearArr.forEach((element, index) => {\n            yearArr[index] = this.thaiNumber[element];\n          });\n          return yearArr.join('');\n        }\n    }\n}\n</script>\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Kanit:wght@200;400&family=Thasadith:ital@1&display=swap');\n\n.bg-canvas {\n  height: 100%;\n  width: 60%;\n  margin: auto;\n  padding-top: 20px;\n}\n\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}